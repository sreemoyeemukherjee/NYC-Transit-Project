models:
  - name: stg__bike_data
    description: ""
    columns:
      - name: started_at_ts
        description: "started at timestamp"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: ended_at_ts
        description: "ended at timestamp"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: tripduration
        description: "Trip Duration (seconds)"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint

      - name: start_station_id
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: start_station_name
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: start_lat
        description: "start station latitude"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: start_lng
        description: "start station longitude"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: end_station_id
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: end_station_name
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: end_lat
        description: "end station latitude"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: end_lng
        description: "end station longitude"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: stg__fhv_bases
    description: ""
    columns:
      - name: base_number
        description: "The TLC license number of the dispatching base"
        tests:
          - dbt_expectations.expect_column_to_exist
          - unique

      - name: base_name
        description: "The official name of the base entity"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: dba
        description: "The “doing business as” name of the base"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: dba_category
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - accepted_values:
              values: [ 'lyft', 'juno', 'other', 'uber', 'via' ]

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: stg__central_park_weather
    description: ""
    columns:
      - name: date
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: awnd
        description: "Average wind speed"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: prcp
        description: "Precipitation"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: snow
        description: "Snowfall"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: snwd
        description: "Snow depth"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: tmax
        description: "Maximum temperature"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: tmin
        description: "Minimum temperature"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: stg__fhvhv_tripdata
    description: ""
    columns:
      - name: hvfhs_license_num
        description: "The TLC license number of the HVFHS base or business
                                  As of September 2019, the HVFHS licensees are the following:
                                  • HV0002: Juno
                                  • HV0003: Uber
                                  • HV0004: Via
                                  • HV0005: Lyft"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: dispatching_base_num
        description: "The TLC Base License Number of the base that dispatched the trip"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null

      - name: originating_base_num
        description: "base number of the base that received the original trip request"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: request_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: on_scene_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: pickup_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: dropoff_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: pulocationid
        description: "TLC Taxi Zone in which the trip began"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint

      - name: dolocationid
        description: "TLC Taxi Zone in which the trip ended"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: bigint

      - name: trip_miles
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 5000

      - name: trip_time
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: base_passenger_fare
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: tolls
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: bcf
        description: "total amount collected in trip for Black Car Fund"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: sales_tax
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: congestion_surcharge
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: airport_fee
        description: "$2.50 for both drop off and pick up at LaGuardia, Newark, and John F. Kennedy airports"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: tips
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: driver_pay
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: shared_request_flag
        description: "Did the passenger agree to a shared/pooled ride, regardless of
                      whether they were matched? (true/false)"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: shared_match_flag
        description: "Did the passenger share the vehicle with another passenger who
                      booked separately at any point during the trip? (true/false)"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: access_a_ride_flag
        description: "Was the trip administered on behalf of the Metropolitan
                      Transportation Authority (MTA)? (true/false)"
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean
          - not_null
          - dbt_expectations.expect_column_to_exist

      - name: wav_request_flag
        description: "Did the passenger request a wheelchair-accessible vehicle (WAV)? (true/false)"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: wav_match_flag
        description: "Did the trip occur in a wheelchair-accessible vehicle (WAV)? (true/false)"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: stg__fhv_tripdata
    description: ""
    columns:
      - name: dispatching_base_num
        description: "The TLC Base License Number of the base that dispatched the trip"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null
          - relationships:
              to: ref('stg__fhv_bases')
              field: base_number
              config:
                severity: warn

      - name: pickup_datetime
        description: "The date and time of the trip pick-up"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: dropoff_datetime
        description: "The date and time of the trip dropoff"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: pulocationid
        description: "TLC Taxi Zone in which the trip began"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: dolocationid
        description: "TLC Taxi Zone in which the trip ended"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: affiliated_base_number
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: stg__green_tripdata
    description: ""
    columns:
      - name: vendorid
        description: "A code indicating the LPEP provider that provided the record.
                      1= Creative Mobile Technologies, LLC; 2= VeriFone Inc."
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: lpep_pickup_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: lpep_dropoff_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: store_and_fwd_flag
        description: "This flag indicates whether the trip record was held in vehicle
                      memory before sending to the vendor, aka “store and forward,”
                      because the vehicle did not have a connection to the server.
                      true= store and forward trip
                      false= not a store and forward trip"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: ratecodeid
        description: "The final rate code in effect at the end of the trip.
                      1= Standard rate
                      2=JFK
                      3=Newark
                      4=Nassau or Westchester
                      5=Negotiated fare
                      6=Group ride"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: pulocationid
        description: "TLC Taxi Zone in which the taximeter was engaged"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: dolocationid
        description: "TLC Taxi Zone in which the taximeter was disengaged"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: passenger_count
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: trip_distance
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: fare_amount
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: extra
        description: "Miscellaneous extras and surcharges. Currently, this only includes
                      the $0.50 and $1 rush hour and overnight charges"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: mta_tax
        description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: tip_amount
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: tolls_amount
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: improvement_surcharge
        description: "$0.30 improvement surcharge assessed on hailed trips at the flag
                      drop. The improvement surcharge began being levied in 2015."
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: total_amount
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: payment_type
        description: "A numeric code signifying how the passenger paid for the trip.
                      1= Credit card
                      2= Cash
                      3= No charge
                      4= Dispute
                      5= Unknown
                      6= Voided trip"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 6

      - name: trip_type
        description: "A code indicating whether the trip was a street-hail or a dispatch
                      that is automatically assigned based on the metered rate in use but
                      can be altered by the driver.
                      1= Street-hail
                      2= Dispatch"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: congestion_surcharge
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: stg__yellow_tripdata
    description: ""
    columns:
      - name: vendorid
        description: "A code indicating the TPEP provider that provided the record.
                      1= Creative Mobile Technologies, LLC; 2= VeriFone Inc"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: tpep_pickup_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: tpep_dropoff_datetime
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: passenger_count
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: trip_distance
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: ratecodeid
        description: "The final rate code in effect at the end of the trip.
                      1= Standard rate
                      2=JFK
                      3=Newark
                      4=Nassau or Westchester
                      5=Negotiated fare
                      6=Group ride"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: store_and_fwd_flag
        description: "This flag indicates whether the trip record was held in vehicle
                      memory before sending to the vendor, aka “store and forward,”
                      because the vehicle did not have a connection to the server.
                      true= store and forward trip
                      false= not a store and forward trip"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: pulocationid
        description: "TLC Taxi Zone in which the taximeter was engaged"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: dolocationid
        description: "TLC Taxi Zone in which the taximeter was disengaged"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: payment_type
        description: "A numeric code signifying how the passenger paid for the trip.
                      1= Credit card
                      2= Cash
                      3= No charge
                      4= Dispute
                      5= Unknown
                      6= Voided trip"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: fare_amount
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: total_amount
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: congestion_surcharge
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: airport_fee
        description: "$1.25 for pick up only at LaGuardia and John F. Kennedy Airports"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: filename
        description: ""
        tests:
          - dbt_expectations.expect_column_to_exist

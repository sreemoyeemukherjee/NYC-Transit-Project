sources:
  - name: main
    tables:
      - name: bike_data
        description: "Where do Citi Bikers ride? When do they ride? How far do they go? Which stations are most popular? What days of the week are most rides taken on? We've heard all of these questions and more from you, and we're happy to provide the data to help you discover the answers to these questions and more. We invite developers, engineers, statisticians, artists, academics and other interested members of the public to use the data we provide for analysis, development, visualization and whatever else moves you.
                      This data is provided according to the NYCBS Data Use Policy."
        columns:
          - name: tripduration
            description: "Trip Duration (seconds)"
            data_type: CHARACTER VARYING(256)
          - name: starttime
            data_type: CHARACTER VARYING(256)
          - name: stoptime
            data_type: CHARACTER VARYING(256)
          - name: start station id
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: start station name
            data_type: CHARACTER VARYING(256)
          - name: start station latitude
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: start station longitude
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: end station id
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: end station name
            data_type: CHARACTER VARYING(256)
          - name: end station latitude
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: end station longitude
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: bikeid
            data_type: CHARACTER VARYING(256)
          - name: usertype
            description: "User Type (Customer = 24-hour pass or 3-day pass user; Subscriber = Annual Member)"
            data_type: CHARACTER VARYING(256)
          - name: birth year
            data_type: CHARACTER VARYING(256)
          - name: gender
            description: "Gender (Zero=unknown; 1=male; 2=female)"
            data_type: CHARACTER VARYING(256)
          - name: ride_id
            data_type: CHARACTER VARYING(256)
          - name: rideable_type
            data_type: CHARACTER VARYING(256)
          - name: started_at
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: ended_at
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: start_station_name
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: start_station_id
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: end_station_name
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: end_station_id
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: start_lat
            description: "start station latitude"
            data_type: CHARACTER VARYING(256)
          - name: start_lng
            description: "start station longitude"
            data_type: CHARACTER VARYING(256)
          - name: end_lat
            description: "end station latitude"
            data_type: CHARACTER VARYING(256)
          - name: end_lng
            description: "end station longitude"
            data_type: CHARACTER VARYING(256)
          - name: member_casual
            description: "Member or casual ride"
            data_type: CHARACTER VARYING(256)
          - name: filename
            data_type: CHARACTER VARYING(256)

      - name: central_park_weather
        columns:
          - name: station
            data_type: CHARACTER VARYING(256)
          - name: name
            data_type: CHARACTER VARYING(256)
          - name: date
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: awnd
            description: "Average wind speed"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: prcp
            description: "Precipitation"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: snow
            description: "Snowfall"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: snwd
            description: "Snow depth"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: tmax
            description: "Maximum temperature"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: tmin
            description: "Minimum temperature"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: filename
            data_type: CHARACTER VARYING(256)

      - name: fhv_bases
        columns:
          - name: base_number
            description: "The TLC license number of the dispatching base"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: base_name
            description: "The official name of the base entity"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: dba
            description: "The “doing business as” name of the base"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: dba_category
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'lyft', 'juno', 'other', 'uber', 'via' ]
          - name: filename
            data_type: CHARACTER VARYING(256)

      - name: fhv_tripdata
        columns:
          - name: dispatching_base_num
            description: "The TLC Base License Number of the base that dispatched the trip"
            data_type: CHARACTER VARYING(256)
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
          - name: pickup_datetime
            description: "The date and time of the trip pick-up"
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: dropoff_datetime
            description: "The date and time of the trip dropoff"
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: pulocationid
            description: "TLC Taxi Zone in which the trip began"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: dolocationid
            description: "TLC Taxi Zone in which the trip ended"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: sr_flag
            description: "Indicates if the trip was a part of a shared ride chain offered by a
                          High Volume FHV company (e.g. Uber Pool, Lyft Line). For shared
                          trips, the value is 1. For non-shared rides, this field is null."
            data_type: INTEGER
          - name: affiliated_base_number
            data_type: CHARACTER VARYING(256)
          - name: filename
            data_type: CHARACTER VARYING(256)

      - name: fhvhv_tripdata
        columns:
          - name: hvfhs_license_num
            description: "The TLC license number of the HVFHS base or business
                          As of September 2019, the HVFHS licensees are the following:
                          • HV0002: Juno
                          • HV0003: Uber
                          • HV0004: Via
                          • HV0005: Lyft"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: dispatching_base_num
            description: "The TLC Base License Number of the base that dispatched the trip"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - not_null
          - name: originating_base_num
            description: "base number of the base that received the original trip request"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: request_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: on_scene_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: pickup_datetime
            data_type: TIMESTAMP
            tests:
              - not_null
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: dropoff_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: pulocationid
            description: "TLC Taxi Zone in which the trip began"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: dolocationid
            description: "TLC Taxi Zone in which the trip ended"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: trip_miles
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 5000
              - dbt_expectations.expect_column_to_exist
          - name: trip_time
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: base_passenger_fare
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: tolls
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: bcf
            description: "total amount collected in trip for Black Car Fund"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: sales_tax
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: congestion_surcharge
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: airport_fee
            description: "$2.50 for both drop off and pick up at LaGuardia, Newark, and John F. Kennedy airports"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: tips
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: driver_pay
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: double
          - name: shared_request_flag
            description: "Did the passenger agree to a shared/pooled ride, regardless of
                          whether they were matched? (Y/N)"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'Y', 'N' ]
                  config:
                    severity: warn
          - name: shared_match_flag
            description: "Did the passenger share the vehicle with another passenger who
                          booked separately at any point during the trip? (Y/N)"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'Y', 'N' ]
                  config:
                    severity: warn
          - name: access_a_ride_flag
            description: "Was the trip administered on behalf of the Metropolitan
                          Transportation Authority (MTA)? (Y/N)"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: ['Y', 'N']
                  config:
                    severity: warn
          - name: wav_request_flag
            description: "Did the passenger request a wheelchair-accessible vehicle (WAV)? (Y/N)"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'Y', 'N' ]
                  config:
                    severity: warn
          - name: wav_match_flag
            description: "Did the trip occur in a wheelchair-accessible vehicle (WAV)? (Y/N)"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'Y', 'N' ]
                  config:
                    severity: warn
          - name: filename
            data_type: CHARACTER VARYING(256)

      - name: green_tripdata
        columns:
          - name: vendorid
            description: "A code indicating the LPEP provider that provided the record.
                          1= Creative Mobile Technologies, LLC; 2= VeriFone Inc."
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: lpep_pickup_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: lpep_dropoff_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: store_and_fwd_flag
            description: "This flag indicates whether the trip record was held in vehicle
                          memory before sending to the vendor, aka “store and forward,”
                          because the vehicle did not have a connection to the server.
                          Y= store and forward trip
                          N= not a store and forward trip"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'Y', 'N' ]
                  config:
                    severity: warn
          - name: ratecodeid
            description: "The final rate code in effect at the end of the trip.
                          1= Standard rate
                          2=JFK
                          3=Newark
                          4=Nassau or Westchester
                          5=Negotiated fare
                          6=Group ride"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: pulocationid
            description: "TLC Taxi Zone in which the taximeter was engaged"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: dolocationid
            description: "TLC Taxi Zone in which the taximeter was disengaged"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: passenger_count
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: trip_distance
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: fare_amount
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: extra
            description: "Miscellaneous extras and surcharges. Currently, this only includes
                          the $0.50 and $1 rush hour and overnight charges"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: mta_tax
            description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use"
            data_type: DOUBLE
          - name: tip_amount
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: tolls_amount
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: ehail_fee
            data_type: INTEGER
          - name: improvement_surcharge
            description: "$0.30 improvement surcharge assessed on hailed trips at the flag
                          drop. The improvement surcharge began being levied in 2015."
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: total_amount
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: payment_type
            description: "A numeric code signifying how the passenger paid for the trip.
                          1= Credit card
                          2= Cash
                          3= No charge
                          4= Dispute
                          5= Unknown
                          6= Voided trip"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: trip_type
            description: "A code indicating whether the trip was a street-hail or a dispatch
                          that is automatically assigned based on the metered rate in use but
                          can be altered by the driver.
                          1= Street-hail
                          2= Dispatch"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: congestion_surcharge
            data_type: DOUBLE
          - name: filename
            data_type: CHARACTER VARYING(256)

      - name: yellow_tripdata
        columns:
          - name: vendorid
            description: "A code indicating the TPEP provider that provided the record.
                          1= Creative Mobile Technologies, LLC; 2= VeriFone Inc"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: tpep_pickup_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: tpep_dropoff_datetime
            data_type: TIMESTAMP
            tests:
              - dbt_expectations.expect_column_to_exist
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: timestamp
          - name: passenger_count
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: trip_distance
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: ratecodeid
            description: "The final rate code in effect at the end of the trip.
                          1= Standard rate
                          2=JFK
                          3=Newark
                          4=Nassau or Westchester
                          5=Negotiated fare
                          6=Group ride"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: store_and_fwd_flag
            description: "This flag indicates whether the trip record was held in vehicle
                          memory before sending to the vendor, aka “store and forward,”
                          because the vehicle did not have a connection to the server.
                          Y= store and forward trip
                          N= not a store and forward trip"
            data_type: CHARACTER VARYING(256)
            tests:
              - dbt_expectations.expect_column_to_exist
              - accepted_values:
                  values: [ 'Y', 'N' ]
                  config:
                    severity: warn
          - name: pulocationid
            description: "TLC Taxi Zone in which the taximeter was engaged"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: dolocationid
            description: "TLC Taxi Zone in which the taximeter was disengaged"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: payment_type
            description: "A numeric code signifying how the passenger paid for the trip.
                          1= Credit card
                          2= Cash
                          3= No charge
                          4= Dispute
                          5= Unknown
                          6= Voided trip"
            data_type: BIGINT
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: fare_amount
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: extra
            description: "Miscellaneous extras and surcharges. Currently, this only includes
                          the $0.50 and $1 rush hour and overnight charges."
            data_type: DOUBLE
          - name: mta_tax
            description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use"
            data_type: DOUBLE
          - name: tip_amount
            data_type: DOUBLE
          - name: tolls_amount
            data_type: DOUBLE
          - name: improvement_surcharge
            description: "$0.30 improvement surcharge assessed trips at the flag drop. The
                          improvement surcharge began being levied in 2015."
            data_type: DOUBLE
          - name: total_amount
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: congestion_surcharge
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: airport_fee
            description: "$1.25 for pick up only at LaGuardia and John F. Kennedy Airports"
            data_type: DOUBLE
            tests:
              - dbt_expectations.expect_column_to_exist
          - name: filename
            data_type: CHARACTER VARYING(256)
